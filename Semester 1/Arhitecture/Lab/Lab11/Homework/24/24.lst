     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fprintf             
     8                                  import exit msvcrt.dll    
     9                                  import fopen msvcrt.dll    
    10                                  import fclose msvcrt.dll    
    11                                  import fprintf msvcrt.dll    
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 6D616E2E74787400            file_name db "man.txt", 0
    17 00000008 7700                        access_mode db "w", 0
    18 0000000A 304B61326B61396861-         text db "0Ka2ka9ha_75", 0
    18 00000013 5F373500           
    19                                      lentext equ $-text-1
    20 00000017 00000000                    file_descriptor dd 0
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25 00000000 B063                            mov al, "c"
    26 00000002 BF[0A000000]                    mov edi, text
    27 00000007 B90C000000                      mov ecx, lentext
    28 0000000C E34F                            jecxz end
    29                                          while:
    30 0000000E 803F30                              cmp byte [edi], 48
    31 00000011 7207                                jb skip
    32 00000013 803F39                              cmp byte [edi], 57
    33 00000016 7702                                ja skip
    34                                              
    35 00000018 8807                                mov [edi], al
    36                                              skip:
    37 0000001A 47                                  inc edi
    38 0000001B E2F1                            loop while
    39                                          
    40 0000001D 68[08000000]                    push dword access_mode
    41 00000022 68[00000000]                    push dword file_name
    42 00000027 FF15[00000000]                  call [fopen]
    43 0000002D 83C408                          add esp, 4*2
    44                                          
    45 00000030 83F800                          cmp eax, 0
    46 00000033 7428                            je end
    47 00000035 A3[17000000]                    mov [file_descriptor], eax
    48                                          
    49 0000003A 68[0A000000]                    push dword text
    50 0000003F FF35[17000000]                  push dword [file_descriptor]
    51 00000045 FF15[00000000]                  call [fprintf]
    52 0000004B 83C408                          add esp, 4*2
    53                                          
    54 0000004E FF35[17000000]                  push dword [file_descriptor]
    55 00000054 FF15[00000000]                  call [fclose]
    56 0000005A 83C404                          add esp, 4
    57                                          
    58                                          end:
    59                                          ; exit(0)
    60 0000005D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    61 0000005F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
