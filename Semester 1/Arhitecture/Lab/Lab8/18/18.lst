     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fread, printf, fopen, fclose               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll 
     9                                  import fopen msvcrt.dll 
    10                                  import fclose msvcrt.dll 
    11                                  import fread msvcrt.dll 
    12                                  import printf msvcrt.dll 
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 746578742E74787400          file_name db "text.txt", 0
    18 00000009 7200                        access_mode db "r", 0
    19 0000000B 00000000                    file_descriptor  dd 0
    20 0000000F 00<rept>                    txt times 100 db 0
    21 00000073 00000000                    nm dd 0
    22 00000077 256400                      format db '%d', 0
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27 00000000 68[09000000]                    push dword access_mode
    28 00000005 68[00000000]                    push file_name
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add esp, 4*2
    31                                          
    32 00000013 83F800                          cmp eax, 0
    33 00000016 746B                            je final
    34 00000018 A3[0B000000]                    mov [file_descriptor], eax
    35                                          
    36                                          while:
    37 0000001D FF35[0B000000]                      push dword [file_descriptor]
    38 00000023 6A64                                push dword 100
    39 00000025 6A01                                push dword 1
    40 00000027 68[0F000000]                        push dword txt
    41 0000002C FF15[00000000]                      call [fread]
    42 00000032 83C410                              add esp, 4*4
    43                                              
    44 00000035 83F800                              cmp eax, 0
    45 00000038 7420                                je end
    46                                              
    47 0000003A 89C1                                mov ecx, eax
    48 0000003C BE[0F000000]                        mov esi, txt
    49                                              for:
    50 00000041 803E20                                  cmp byte [esi], ' '
    51 00000044 7506                                    jne skip1
    52 00000046 FF05[73000000]                          inc dword [nm]
    53                                                  
    54                                                  skip1:
    55 0000004C 803E2E                                  cmp byte [esi], '.'
    56 0000004F 7506                                    jne skip2
    57 00000051 FF05[73000000]                          inc dword [nm]
    58                                                  
    59                                                  skip2:
    60 00000057 46                                      inc esi
    61 00000058 E2E7                                loop for
    62                                          end:
    63 0000005A FF35[0B000000]                  push dword [file_descriptor]
    64 00000060 FF15[00000000]                  call [fclose]
    65 00000066 83C404                          add esp, 4
    66                                          
    67 00000069 FF05[73000000]                  inc dword [nm]
    68 0000006F FF35[73000000]                  push dword [nm]
    69 00000075 68[77000000]                    push dword format
    70 0000007A FF15[00000000]                  call [printf]
    71 00000080 83C408                          add esp, 4*2
    72                                          
    73                                          final:
    74                                          ; exit(0)
    75 00000083 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    76 00000085 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
