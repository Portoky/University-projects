     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fscanf, fprintf, fopen, fclose               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fscanf msvcrt.dll                   
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fprintf msvcrt.dll       ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 6E756D626572732E74-         file_name db "numbers.txt", 0
    17 00000009 787400             
    18 0000000C 612B00                      access_mode db "a+", 0
    19 0000000F 256400                      format db "%d", 0
    20 00000012 42696767657374206E-         result db "Biggest number: %d", 0
    20 0000001B 756D6265723A202564-
    20 00000024 00                 
    21 00000025 00000000                    biggest dd 0
    22 00000029 00000000                    current dd 0
    23 0000002D 00000000                    file_descriptor dd 0
    24                                      
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      lmao:
    28 00000000 B800000000                  mov eax, 0
    29                                      start:
    30                                          ; ...
    31 00000005 68[0C000000]                    push dword access_mode
    32 0000000A 68[00000000]                    push dword file_name
    33 0000000F FF15[00000000]                  call [fopen]
    34 00000015 83C408                          add esp, 4*2
    35                                          
    36 00000018 83F800                          cmp eax, 0
    37 0000001B 7460                            je end
    38                                          
    39 0000001D A3[2D000000]                    mov [file_descriptor], eax
    40                                          
    41                                          while:
    42 00000022 68[29000000]                        push dword current
    43 00000027 68[0F000000]                        push dword format 
    44 0000002C FF35[2D000000]                      push dword [file_descriptor]
    45 00000032 FF15[00000000]                      call [fscanf]
    46 00000038 83C40C                              add esp, 4*3
    47                                              
    48                                              
    49 0000003B 83F801                              cmp eax, 1
    50 0000003E 7514                                jne final; we didnt read anything-> exit the file
    51                                              
    52 00000040 A1[29000000]                        mov eax, [current]
    53 00000045 3B05[25000000]                      cmp eax, [biggest]
    54 0000004B 7CD5                                jl while
    55                                              
    56 0000004D A3[25000000]                        mov [biggest], eax
    57 00000052 EBCE                                jmp while
    58                                              
    59                                          final:
    60                                          
    61 00000054 FF35[25000000]                  push dword [biggest]
    62 0000005A 68[12000000]                    push dword result
    63 0000005F FF35[2D000000]                  push dword [file_descriptor]
    64 00000065 FF15[00000000]                  call [fprintf]
    65 0000006B 83C408                          add esp, 4*2
    66                                          
    67 0000006E FF35[2D000000]                  push dword [file_descriptor]
    68 00000074 FF15[00000000]                  call [fclose]
    69 0000007A 83C404                          add esp, 4
    70                                          
    71                                          end:
    72                                          ; exit(0)
    73 0000007D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    74 0000007F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
