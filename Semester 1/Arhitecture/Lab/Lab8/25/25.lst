     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, fprintf, fopen, fclose               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll 
     9                                  import fopen msvcrt.dll 
    10                                  import fclose msvcrt.dll 
    11                                  import scanf msvcrt.dll 
    12                                  import fprintf msvcrt.dll 
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 776F7264732E747874-         file_name db "words.txt", 0
    16 00000009 00                 
    17 0000000A 7700                        access_mode db "w", 0
    18 0000000C 00000000                    file_descriptor  dd 0
    19 00000010 257300                      format db "%s", 0
    20 00000013 00<rept>                    theword times 100 db 0
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25 00000000 68[0A000000]                    push dword access_mode
    26 00000005 68[00000000]                    push dword file_name
    27 0000000A FF15[00000000]                  call [fopen]
    28 00000010 83C408                          add esp, 4*2
    29                                          
    30 00000013 83F800                          cmp eax, 0
    31 00000016 7474                            je end
    32 00000018 A3[0C000000]                    mov [file_descriptor], eax
    33                                          
    34                                          while:
    35 0000001D 68[13000000]                        push dword theword
    36 00000022 68[10000000]                        push dword format
    37 00000027 FF15[00000000]                      call [scanf]
    38 0000002D 83C408                              add esp, 4*2
    39                                              
    40 00000030 803D[13000000]24                    cmp byte [theword], '$'
    41 00000037 7447                                je final
    42                                              
    43 00000039 BE[12000000]                        mov esi, theword-1
    44 0000003E B300                                mov bl, 0
    45                                              for:
    46 00000040 46                                      inc esi
    47 00000041 803E30                                  cmp byte [esi], 48
    48 00000044 7207                                    jb skip
    49 00000046 803E39                                  cmp byte [esi], 57
    50 00000049 7702                                    ja skip
    51                                                  
    52 0000004B FEC3                                    inc bl
    53                                                  
    54                                                  skip:
    55                                                  
    56 0000004D 803E00                                  cmp byte [esi], 0
    57 00000050 75EE                                    jne for
    58 00000052 80FB00                              cmp bl, 0
    59 00000055 7419                                je skip2
    60 00000057 68[13000000]                        push dword theword
    61 0000005C 68[10000000]                        push dword format
    62 00000061 FF35[0C000000]                      push dword [file_descriptor]
    63 00000067 FF15[00000000]                      call [fprintf]
    64 0000006D 83C40C                              add esp, 4*3
    65                                              
    66                                              skip2:
    67 00000070 B964000000                          mov ecx, 100
    68 00000075 BF[13000000]                        mov edi, theword
    69 0000007A B000                                mov al, 0
    70 0000007C F3AA                                rep stosb
    71                                              
    72 0000007E EB9D                                jmp while
    73                                          final:
    74 00000080 FF35[0C000000]                  push dword [file_descriptor]
    75 00000086 FF15[00000000]                  call [fclose]
    76                                          
    77                                          end:
    78                                          ; exit(0)
    79 0000008C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    80 0000008E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
