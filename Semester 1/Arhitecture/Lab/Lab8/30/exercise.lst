     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, fprintf, fopen, fclose               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll                        
    10                                  import fprintf msvcrt.dll                        
    11                                  import fopen msvcrt.dll                        
    12                                  import fclose msvcrt.dll                        
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 776F7264732E747874-         file_name db "words.txt", 0
    17 00000009 00                 
    18 0000000A 7700                        access_mode db "w", 0
    19 0000000C FFFFFFFF                    file_descriptor dd -1
    20 00000010 257300                      format db "%s", 0
    21                                      max_len equ 100
    22 00000013 00<rept>                    cuvant times max_len db 0
    23                                      
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ; ...
    28 00000000 68[0A000000]                    push dword access_mode
    29 00000005 68[00000000]                    push dword file_name
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4*2
    32                                          
    33 00000013 83F800                          cmp eax, 0
    34 00000016 7475                            je final
    35 00000018 A3[0C000000]                    mov [file_descriptor], eax
    36                                          
    37                                          while:
    38 0000001D 68[13000000]                        push dword cuvant
    39 00000022 68[10000000]                        push dword format
    40 00000027 FF15[00000000]                      call [scanf]
    41 0000002D 83C408                              add esp, 4*2
    42                                              
    43 00000030 BF[13000000]                        mov edi, cuvant
    44 00000035 803F24                              cmp byte [edi], "$"
    45 00000038 7444                                je end
    46                                              
    47 0000003A B300                                mov bl, 0
    48 0000003C B964000000                          mov ecx, max_len
    49                                              for:
    50 00000041 803F30                                  cmp byte [edi], "0"
    51 00000044 7207                                    jb skip
    52 00000046 803F39                                  cmp byte [edi], "9"
    53 00000049 7702                                    ja skip
    54                                                  
    55 0000004B B301                                    mov bl, 1
    56                                                  
    57                                                  skip:
    58 0000004D 47                                      inc edi
    59 0000004E E2F1                                loop for
    60                                              
    61 00000050 80FB00                              cmp bl, 0
    62 00000053 7419                                je dont_print
    63                                              
    64 00000055 68[13000000]                        push dword cuvant
    65 0000005A 68[10000000]                        push dword format
    66 0000005F FF35[0C000000]                      push dword [file_descriptor]
    67 00000065 FF15[00000000]                      call [fprintf]
    68 0000006B 83C40C                              add esp, 4*3
    69                                              dont_print:
    70                                              ;clearing the string so we can read again without having any problems from the previous read
    71 0000006E B964000000                          mov ecx, max_len
    72 00000073 BF[13000000]                        mov edi, cuvant
    73 00000078 B000                                mov al, 0
    74 0000007A F3AA                                rep stosb
    75                                              
    76 0000007C EB9F                                jmp while
    77                                              
    78                                          end:
    79 0000007E FF35[0C000000]                  push dword [file_descriptor]
    80 00000084 FF15[00000000]                  call [fclose]
    81 0000008A 83C404                          add esp, 4
    82                                          
    83                                          final:
    84                                          ; exit(0)
    85 0000008D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    86 0000008F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
