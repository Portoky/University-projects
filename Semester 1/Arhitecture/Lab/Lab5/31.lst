     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15 00000000 2B34326138345835            s db '+', '4', '2', 'a', '8', '4', 'X', '5'
    16                                      lens equ $-s
    17 00000008 00<rept>                    d times lens+1 db 0
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 B908000000                      mov ecx, lens
    24 00000005 E322                            jecxz final
    25                                          
    26 00000007 BE00000000                      mov esi, 0
    27 0000000C BF00000000                      mov edi, 0
    28                                          
    29                                          for:
    30 00000011 8A86[00000000]                      mov al, [s+esi]
    31 00000017 3C30                                cmp al, 48
    32 00000019 720B                                jb skip
    33 0000001B 3C39                                cmp al, 57
    34 0000001D 7707                                ja skip
    35                                              
    36 0000001F 8887[08000000]                      mov [d+edi], al
    37 00000025 47                                  inc edi
    38                                          
    39                                              skip:
    40 00000026 46                                  inc esi
    41 00000027 E2E8                            loop for
    42                                          
    43                                          final:
    44                                          
    45 00000029 68[08000000]                    push dword d
    46 0000002E FF15[00000000]                  call [printf]
    47 00000034 83C404                          add esp, 4 
    48                                          ; exit(0)
    49 00000037 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    50 00000039 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
