     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 61636568                    s1 db 'aceh'
    15 00000004 62646667                    s2 db 'bdfg'
    16                                      length equ $-s2
    17 00000008 00<rept>                    d times length db 0
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 B904000000                      mov ecx, length
    23 00000005 BE00000000                      mov esi, 0
    24 0000000A E321                            jecxz end
    25                                          repeat:
    26 0000000C 8A86[00000000]                      mov al, [s1 + esi]
    27 00000012 8A9E[04000000]                      mov bl, [s2 + esi]
    28                                              ;if starts here
    29 00000018 38D8                                cmp al, bl
    30 0000001A 7208                                jb s1small
    31                                              
    32 0000001C 889E[08000000]                      mov [d + esi], bl
    33 00000022 EB06                                jmp endif
    34                                              
    35                                              s1small:
    36 00000024 8886[08000000]                      mov  [d + esi], al
    37                                              
    38                                              endif:
    39 0000002A 46                                  inc esi
    40                                          
    41 0000002B E2DF                            loop repeat
    42                                          
    43                                          end:
    44                                          ; exit(0)
    45 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
