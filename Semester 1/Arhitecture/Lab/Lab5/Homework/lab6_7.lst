     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 61626364                    s1 db 'abcd'
    15 00000004 65666768                    s2 db 'efgh'
    16                                      length equ $-s2
    17 00000008 00<rept>                    d times 2*length db 0
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 B904000000                      mov ecx, length
    23 00000005 BE00000000                      mov esi, 0
    24 0000000A BF00000000                      mov edi, 0
    25 0000000F E31D                            jecxz end
    26                                          repeat:
    27 00000011 8A86[00000000]                         mov al, [s1+esi]
    28 00000017 8887[08000000]                         mov [d + edi], al
    29 0000001D 47                                     inc edi
    30                                                 
    31 0000001E 8A86[04000000]                         mov al, [s2+esi]
    32 00000024 8887[08000000]                         mov [d + edi], al 
    33 0000002A 47                                     inc edi
    34 0000002B 46                                     inc esi
    35                                                 
    36 0000002C E2E3                            loop repeat
    37                                          end:
    38                                          ; exit(0)
    39 0000002E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 00000030 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
