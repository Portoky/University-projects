     1                                  bits 32 ;assembling for the 32 bits architecture
     2                                  global start
     3                                  
     4                                  ; we ask the assembler to give global visibility to the symbol called start 
     5                                  ;(the start label will be the entry point in the program) 
     6                                  extern exit ; we inform the assembler that the exit symbol is foreign; it exists even if we won't be defining it
     7                                  import exit msvcrt.dll  ; we specify the external library that defines the symbol
     8                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
     9                                  
    10                                  ; our variables are declared here (the segmenst is called data) 
    11                                  segment data use32 class=data
    12                                  ; ...
    13 00000000 0100                    a dw 1
    14                                  ; the program code will be part of a segment called code
    15                                  segment code use32 class=code
    16                                  start:
    17                                  ; ... 
    18 00000000 66B80001                    mov ax, 256
    19 00000004 66BA0000                    mov dx, 0
    20 00000008 66F735[00000000]            div word [a] ;ax = dx:ax / a
    21                                      ; call exit(0) ), 0 represents status code: SUCCESS
    22 0000000F 6A00                        push dword 0 ; saves on stack the parameter of the function exit
    23 00000011 FF15[00000000]              call [exit] ; function exit is called in order to end the execution of
    24                                  ;the program
