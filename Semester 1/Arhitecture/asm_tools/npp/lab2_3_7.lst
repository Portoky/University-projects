     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 01                          a db 1
    15 00000001 02                          b db 2
    16 00000002 03                          c db 3
    17 00000003 0400                        d dw 4
    18                                      hundred equ 100
    19                                      three equ 3
    20                                      ten equ 10
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25 00000000 66A1[03000000]                  mov AX, [d]
    26 00000006 6683C003                        add AX, word three
    27 0000000A 66BA6400                        mov DX, 100
    28 0000000E 66F7E2                          mul DX ;DX:AX = 100*(d+3)
    29 00000011 66BB0A00                        mov BX, word ten
    30 00000015 66B90000                        mov CX, 0 ;CX:BX = 10
    31                                          
    32 00000019 F8                              clc 
    33 0000001A 6629D8                          sub AX, BX
    34 0000001D 6619CA                          sbb DX, CX ;DX:AX = 100*(d+3)-10
    35                                              
    36                                              
    37                                          ;sub AX, dword ten ; AX = 100*(d+3) - 10; ax<10!!!
    38 00000020 66F735[03000000]                div word [d] ; AX = (100*(d+3) - 10)/d DX = %
    39                                          ; exit(0)
    40 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
