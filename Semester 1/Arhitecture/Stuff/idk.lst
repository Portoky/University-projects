     1                                  bits 32 ;assembling for the 32 bits architecture
     2                                  ; the start label will be the entry point in the program
     3                                  global  start 
     4                                  
     5                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
     6                                  
     7                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
     8                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
     9                                  segment  data use32 class=data ; the data segment where the variables are declared 
    10 00000000 8877665544332211        	m dq 1122334455667788h 
    11 00000008 DDEEDDCC                	n  dd 0ccddeeddh 
    12 0000000C <res 00000004>          	rezd  resd 1 
    13                                  	; our code starts here 
    14                                  segment  code use32 class=code ; code segment
    15                                  start: 
    16                                  	;mov  ebx, [n] 
    17                                  	
    18                                  	;11223344  55667788 h -> EDX : EAX 
    19                                  	;   EDX   :   EAX 
    20                                  	;mov eax, dword [m+0] 
    21                                  	;mov edx, dword [m+4] 
    22                                  	
    23                                  	;div ebx ; edx:eax/ebx=eax cat si edx rest 
    24                                  	
    25                                      ;mov dword[rezd], eax 
    26                                  	
    27 00000000 B905000000                  MOV ECX,5
    28                                      repeat:
    29 00000005 49                          DEC ECX
    30 00000006 E2FD                            LOOP repeat
    31                                  
    32                                      
    33 00000008 6A00                    	push  dword 0  ; push  the parameter for exit onto the stack 
    34 0000000A FF15[00000000]          	call  [exit] ; call exit to terminate the program
